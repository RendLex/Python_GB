# 2. Дан список строк. Выполнить обработку списка (смотри текст задания) и сформировать на его основе строку
# Техническое задание:
#
# Список может содержать произвольное кол-во элементов. Все его элементы - строки.
# Примеры исходного списка:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Строки-элементы списка:
# Время: любое целое число, без привязки к ограничениям на 60 минут/секунд и 24 часа, т.е. '79', 'минут' - это корректно. Пример: "1" "12" "75"
# Температуры: любое целое число. Начинается со знаков + или -, но может и быть без знака. Пример: "+5", "-7", "12";
# Слова: просто символьные строки.
# в начале и конце строк-чисел пробелов нет.
# строки-числа и строки-слова не обязательно идут точно через один.
# Создать новый список и наполнить его элементами по схеме:
# Обособить каждое целое число (исходного списка) кавычками (добавить элемент списка: строку-кавычку до и после элемента списка, являющегося числом)
# дополнить это число нулём до двух целочисленных разрядов
# Например исходный список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов'].
# Тогда новый список: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов'].
# Новый список вывести на экран
# После окончательного формирования нового списка - сделать на его основе строку, соединив все элементы
# Для примера выше: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
# Вывести строку на экран.
# Обратите внимание на отсутствие "лишних" пробелов около кавычек, например "08" минут - правильно, а " 08 " минут - неправильно.
# Ваш алгоритм должен работать для любого подобного списка, а не только для приведенных примеров.
# Регулярные выражения не используем. Учимся парсить строку самостоятельно.
# Подтвердить правильность программы на трех приведенных тестах
# Формат вывода результата:
# Исходный, результирующий список и строку выводим на экран через print.
#
# Примеры/Тесты:
#
# Исходный список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Новый список + добавление элементов-кавычек: ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
# Окончательная строка: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
# Исходный список: ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# Новый список + добавление элементов-кавычек: ['примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут', '"', '03', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '-05', '"', 'градусов Цельсия', 'темп', 'воды', '"', '+12', '"', 'градусов', 'Цельсия']
# Окончательная строка: 'примерно в "23" часа "08" минут "03" секунд температура воздуха была "-05" градусов Цельсия, темп воды "+12" градусов Цельсия'
# Исходный список: ['+9', 'примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура', 'воздуха', 'была', '5', 'градусов Цельсия', 'темп','воды','+2.0','градусов','Цельсия' ,'-2', '11']
# Новый список + добавление элементов-кавычек: ['"', '+09', '"', 'примерно в', '"', '23', '"', 'часа', '"', '08', '"', 'минут', '"', '03', '"', '"', '05', '"', 'секунд', 'температура', 'воздуха', 'была', '"', '05', '"', 'градусов Цельсия', 'темп', 'воды', '+2.0', 'градусов', 'Цельсия', '"', '-02', '"', '"', '11', '"']
# "+09" примерно в "23" часа "08" минут "03" "05" секунд температура воздуха была "05" градусов Цельсия темп воды +2.0 градусов Цельсия "-02" "11"
# Задание упрощенное
#
# Если у вас не получается добавить правильно элементы-кавычки в новый список - упростим задачу. Обработайте строки-числа исходного спискав соответствии с условием задачи и вставьте кавычки прямо в эту же строку. Т.е. вы меняете элементы списка, не добавляя новых элементов. При этом вы можете создавать новый список или не делать этого.
# Если вы выбрали решать упрощенный вариант - напишите об этом комментариях в ПЗ.
# Задание повышенной сложности (задание со звездочкой)
#
# Не создавайте новый список. Это называется решить «in place». Измените существующий список, добавив элементы-кавычки в соответствии с условием задачи. Не добавляйте «лишних» элементов - только элементы-кавычки и не удаляйте из списка никаких элементов. Эта задача намного серьезнее, чем может сначала показаться.
# Если вы выбрали решать усложненный вариант - напишите об этом комментариях в ПЗ.

#lst = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#lst = ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5', 'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
lst = ['+9', 'примерно в', '23', 'часа', '8', 'минут', '03', '05', 'секунд', 'температура', 'воздуха', 'была', '5', 'градусов Цельсия', 'темп','воды','+2.0','градусов','Цельсия' ,'-2', '11']

print(f"исходный список:\n{lst}")

# Длелаем нескоько копий т.к. придется работать со списками разными алгоритмами
lst_copy1 = lst.copy()
lst_copy2 = lst.copy()

# Формируем новй список и добавляем кавычки
lst_new1 = []
for si in lst:
    check_symbol_1 = si.isdigit()
    check_symbol_2 = (si[0] == "+" or si[0] == "-") and si[1:].isdigit()
    if check_symbol_1 or check_symbol_2:
        if len(si) == 1:
            si = f"0{si}"
        elif check_symbol_2 and len(si[1:]) == 1:
            si = f"{si[0]}0{si[1:]}"
        lst_new1.append('"')
        lst_new1.append(si)
        lst_new1.append('"')
    else:
        lst_new1.append(si)
print(f"Новый список c добавлением элементов:\n{lst_new1}")

# Изменение текущего списка без добавления кавычек
for idx, si in enumerate(lst_copy1):
    check_symbol_1 = si.isdigit()
    check_symbol_2 = (si[0] == "+" or si[0] == "-") and si[1:].isdigit()
    if check_symbol_1 or check_symbol_2:
        if len(si) == 1:
            si = f"0{si}"
        elif check_symbol_2 and len(si[1:]) == 1:
            si = f"{si[0]}0{si[1:]}"
print(f"Изменение в текущем списке без добавление элементов кавычки:\n{lst_copy1}")

# Усложеннное решение в текущем списке с бобавлением кавычек
idx_add = len(lst)-1
for idx in range(len(lst_copy2)-1, -1, -1):
    si = lst_copy2[idx]
    check_symbol_1 = si.isdigit()
    check_symbol_2 = (si[0] == "+" or si[0] == "-") and si[1:].isdigit()
    if check_symbol_1 or check_symbol_2:
        if len(si) == 1:
            si = f"0{si}"
        elif check_symbol_2 and len(si[1:]) == 1:
            si = f"{si[0]}0{si[1:]}"
        lst_copy2.insert(idx+1, '"')
        lst_copy2[idx] = si
        lst_copy2.insert(idx, '"')
print(f"Изменение в текущем списке c добавление элементов кавычки:\n{lst_copy2}")

# Выводим сформированные строки
# Для lst_copy1
rez_new1 = ""
for idx, si in enumerate(lst_copy1):
    rez_new1 += f"{si} "
print(rez_new1)

# Для остальных случаев lst_new1 и lst_copy2
rez_new2 = ""
for idx in range(len(lst_new1)-1):
    si_o = lst_new1[idx]
    si_f = lst_new1[idx+1]

    # Проверяем если число
    number_1 = si_o.isdigit() or (si_o[0] in ("+", "-") and si_o[1:].isdigit())
    # Проверяем если предыдущий число
    number_2 = si_f.isdigit() or (si_f[0] in ("+", "-") and si_f[1:].isdigit())

    if (si_o == '"' and number_2) or number_1:
        rez_new2 += f"{si_o}"
    else:
        rez_new2 += f"{si_o} "
rez_new2 += f"{lst_new1[-1]}"
print(rez_new2)